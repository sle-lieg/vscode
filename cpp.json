{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"hpp files": {
		"prefix": "ifn",
		"body": [
			"#ifndef ${1:${TM_FILENAME_BASE/(.*)/${1:/upcase}/}}_HPP",
			"# define ${1}_HPP",
			"",
			"",
			"#endif"
		],
		"description": "hpp header"
	},
	"class coplien": {
		"prefix": "class",
		"body": [
			"#include <iostream>",
			"#include \"\"",
			"",
			"class ${TM_FILENAME_BASE}",
			"{",
			"	public:",
			"		${TM_FILENAME_BASE}( void );",
			"		~${TM_FILENAME_BASE}( void );",
			"		${TM_FILENAME_BASE}(${TM_FILENAME_BASE} const &);",
			"		${TM_FILENAME_BASE}&	operator=(${TM_FILENAME_BASE} const &);",
			"",
			"	private:",
			"",
			"};"
		]

	}
}